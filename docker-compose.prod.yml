version: '3'

services:

  db:
    container_name: app_${APP_ENV}_db
    image: mysql:8.0
    restart: always
    ports:
      - "5000:3306"  # Modifier le port pour correspondre au port MySQL par d√©faut
    volumes:
      - db:/var/lib/mysql
    env_file:
      - .env
    networks:
      - appinternals


  back:
    container_name: app_${APP_ENV}_back
    ports:
      - "8080:8080"
    image: ${DOCKER_USER}/alayde-back-img:${DOCKER_IMAGE_TAG} 
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    networks:
      appinternals:
        aliases:
          - back


  nginx:
    container_name: app_${APP_ENV}_front
    image: ${DOCKER_USER}/alayde-front:${DOCKER_IMAGE_TAG}
    depends_on:
      - back
    restart: always
    ports:
      - ${GATEWAY_PORT:-8010}:80
    networks:
      - appinternals

volumes:
  db:
    driver: local
networks:
  appinternals:
    # customize the actual network name depending on environment, so "prod" containers do not share network with "preprod" even on same machine / docker server 
    name: appinternals_${APP_ENV}
